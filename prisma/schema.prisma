// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  auth0Id       String    @unique
  email         String    @unique
  name          String?
  picture     String?
  favorites     Favorite[]
  comments      Comment[]
  bugReports  BugReport[]
  toolRequests ToolRequest[] 
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Favorite {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  toolId    String
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  tool      Tool     @relation(fields: [toolId], references: [id])  // Add this line
  createdAt DateTime @default(now())

  @@unique([userId, toolId])
}


model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  toolId    String
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tool {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  category    String
  description String
  href        String    // Add this field
  favorites   Favorite[]
}

model BugReport {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  toolName    String
  toolId      String
  subject     String
  description String
  status      String    @default("pending")
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
model ToolRequest {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])  // Add this relation
  userEmail   String
  toolName    String
  category    String
  description String
  useCase     String
  targetAudience String
  status      String   @default("pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("toolRequests")
}

